# XXX use FiraCodeNerdFont instead for icons
awesome: &awesome Font Awesome 6 Free:style=solid:pixelsize=14
std_underline: &std_underline {underline: { size: 2, color: ff0000ff}}

# copied from sway config
color_bg: &color_bg 282828ff
color_bg1: &color_bg1 3c3836ff
color_bg2: &color_bg2 504945ff
color_bg3: &color_bg3 665c54ff
color_bg4: &color_bg4 7c6f64ff
color_fb: &color_fb ebdbb2ff
color_aqua: &color_aqua 8ec07cff
color_blue: &color_blue 83a598ff
color_light_bg: &color_light_bg fbf1c7ff
color_light_fg: &color_light_fg 3c3836ff
color_normal_white: &color_normal_white a89984ff
color_bright_white: &color_bright_white ebdbb2ff
color_normal_gray: &color_normal_gray 282828ff
color_bright_gray: &color_bright_gray 3c3836ff
color_bright_yellow: &color_bright_yellow d79921ff
color_normal_black: &color_normal_black 1d2021ff
color_unused: &color_unused ff0000ff

bar:
  height: 30
  location: top
  foreground: *color_bright_white
  background: *color_bg
  font: FiraCodeNerdFont:pixelsize=18

  left:
    - i3:
        anchors:
          - string: &i3_common {margin: 5, on-click: "swaymsg --quiet workspace {name}"}
          - string: &default {<<: *i3_common, text: "{name}"}
          - focused: &focused
              deco: {stack: [background: {color: *color_bg1}, <<: *std_underline]}
          - invisible: &invisible {foreground: ffffff55}
          - urgent: &urgent
              foreground: 000000ff
              deco: {stack: [background: {color: bc2b3fff}, <<: *std_underline]}
          - map: &i3_mode
              default:
                - string:
                    margin: 5
                    text: "{mode}"
                    deco: {background: {color: cc421dff}}
                - empty: {right-margin: 7}
              conditions:
                mode == default: {empty: {}}
        content:
          # XXX how to condense this?
          1:
            map:
              conditions:
                state == focused:   {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: *default}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}
          2:
            map:
              conditions:
                state == focused:   {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: *default}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}
          3:
            map:
              conditions:
                state == focused: {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: *default}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}
          4:
            map:
              conditions:
                state == focused: {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: *default}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}

          5:
            map:
              conditions:
                state == focused: {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: *default}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}
          6:
            map:
              conditions:
                state == focused: {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: *default}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}
          7:
            map:
              conditions:
                state == focused: {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: *default}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}
          8:
            map:
              conditions:
                state == focused: {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: *default}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}
          9:
            map:
              conditions:
                state == focused: {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: *default}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}
          10:
            map:
              conditions:
                state == focused: {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: *default}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}


    - foreign-toplevel:
        content:
          map:
            conditions:
              ~activated: {empty: {}}
              activated:
                # - string: {text: "{app-id}", foreground: ffa0a0ff}
                # - string: {text: ": {title}"}
                - string: {text: "{title}", left-margin: 10}


  right:
    - battery:
        name: BAT0
        poll-interval: 30000
        anchors:
          discharging: &discharging
            list:
              items:
                - ramp:
                    tag: capacity
                    items:
                      - string: {text: , foreground: ff0000ff, font: *awesome}
                      - string: {text: , foreground: ffa600ff, font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , foreground: 00ff00ff, font: *awesome}
                - string: {text: "{capacity}%({estimate})"}
        content:
          map:
            conditions:
              state == unknown:
                <<: *discharging
              state == discharging:
                <<: *discharging
              state == charging:
                - string: {text: , foreground: 00ff00ff, font: *awesome}
                - string: {text: "{capacity}% ({estimate})"}
              state == full:
                - string: {text: , foreground: 00ff00ff, font: *awesome}
                - string: {text: "{capacity}%"}
              state == "not charging":
                - ramp:
                    tag: capacity
                    items:
                      - string: {text:  , foreground: ff0000ff, font: *awesome}
                      - string: {text:  , foreground: ffa600ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                - string: {text: "{capacity}%"}
    - clock:
        content:
          #- string: {text: , font: "Font Awesome 6 Free:style=solid:size=12"}
          - string: {text: "{date} {time}", left-margin: 20}
